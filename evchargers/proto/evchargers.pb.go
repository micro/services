// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.5
// source: proto/evchargers.proto

package evchargers

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Search by giving a coordinate and a max distance, or bounding box and optional filters
type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Coordinates from which to begin search
	Location *Coordinates `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	// Search distance from point in metres, defaults to 5000m
	Distance int64 `protobuf:"varint,2,opt,name=distance,proto3" json:"distance,omitempty"`
	// Bounding box to search within (top left and bottom right coordinates)
	Box *BoundingBox `protobuf:"bytes,3,opt,name=box,proto3" json:"box,omitempty"`
	// Maximum number of results to return, defaults to 100
	MaxResults int64 `protobuf:"varint,4,opt,name=max_results,json=maxResults,proto3" json:"max_results,omitempty"`
	// Country ID
	CountryId string `protobuf:"bytes,5,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`
	// IDs of the the EV charger operator
	Operators []string `protobuf:"bytes,6,rep,name=operators,proto3" json:"operators,omitempty"`
	// IDs of the connection type
	ConnectionTypes []string `protobuf:"bytes,7,rep,name=connection_types,json=connectionTypes,proto3" json:"connection_types,omitempty"`
	// Supported charging levels
	Levels []string `protobuf:"bytes,8,rep,name=levels,proto3" json:"levels,omitempty"`
	// Minimum power in KW. Note: data not available for many chargers
	MinPower int64 `protobuf:"varint,9,opt,name=min_power,json=minPower,proto3" json:"min_power,omitempty"`
	// Usage of the charge point (is it public, membership required, etc)
	UsageTypes []string `protobuf:"bytes,11,rep,name=usage_types,json=usageTypes,proto3" json:"usage_types,omitempty"`
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_evchargers_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_evchargers_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_evchargers_proto_rawDescGZIP(), []int{0}
}

func (x *SearchRequest) GetLocation() *Coordinates {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *SearchRequest) GetDistance() int64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *SearchRequest) GetBox() *BoundingBox {
	if x != nil {
		return x.Box
	}
	return nil
}

func (x *SearchRequest) GetMaxResults() int64 {
	if x != nil {
		return x.MaxResults
	}
	return 0
}

func (x *SearchRequest) GetCountryId() string {
	if x != nil {
		return x.CountryId
	}
	return ""
}

func (x *SearchRequest) GetOperators() []string {
	if x != nil {
		return x.Operators
	}
	return nil
}

func (x *SearchRequest) GetConnectionTypes() []string {
	if x != nil {
		return x.ConnectionTypes
	}
	return nil
}

func (x *SearchRequest) GetLevels() []string {
	if x != nil {
		return x.Levels
	}
	return nil
}

func (x *SearchRequest) GetMinPower() int64 {
	if x != nil {
		return x.MinPower
	}
	return 0
}

func (x *SearchRequest) GetUsageTypes() []string {
	if x != nil {
		return x.UsageTypes
	}
	return nil
}

type Coordinates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float32 `protobuf:"fixed32,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float32 `protobuf:"fixed32,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *Coordinates) Reset() {
	*x = Coordinates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_evchargers_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coordinates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coordinates) ProtoMessage() {}

func (x *Coordinates) ProtoReflect() protoreflect.Message {
	mi := &file_proto_evchargers_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coordinates.ProtoReflect.Descriptor instead.
func (*Coordinates) Descriptor() ([]byte, []int) {
	return file_proto_evchargers_proto_rawDescGZIP(), []int{1}
}

func (x *Coordinates) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Coordinates) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

// Box to search (top left and bottom right coordinates)
type BoundingBox struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BottomLeft *Coordinates `protobuf:"bytes,1,opt,name=bottom_left,json=bottomLeft,proto3" json:"bottom_left,omitempty"`
	TopRight   *Coordinates `protobuf:"bytes,2,opt,name=top_right,json=topRight,proto3" json:"top_right,omitempty"`
}

func (x *BoundingBox) Reset() {
	*x = BoundingBox{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_evchargers_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoundingBox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoundingBox) ProtoMessage() {}

func (x *BoundingBox) ProtoReflect() protoreflect.Message {
	mi := &file_proto_evchargers_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoundingBox.ProtoReflect.Descriptor instead.
func (*BoundingBox) Descriptor() ([]byte, []int) {
	return file_proto_evchargers_proto_rawDescGZIP(), []int{2}
}

func (x *BoundingBox) GetBottomLeft() *Coordinates {
	if x != nil {
		return x.BottomLeft
	}
	return nil
}

func (x *BoundingBox) GetTopRight() *Coordinates {
	if x != nil {
		return x.TopRight
	}
	return nil
}

type SearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pois []*Poi `protobuf:"bytes,1,rep,name=pois,proto3" json:"pois,omitempty"`
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_evchargers_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_evchargers_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_proto_evchargers_proto_rawDescGZIP(), []int{3}
}

func (x *SearchResponse) GetPois() []*Poi {
	if x != nil {
		return x.Pois
	}
	return nil
}

type Poi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the charger
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The ID of the data provider
	DataProviderId string `protobuf:"bytes,2,opt,name=data_provider_id,json=dataProviderId,proto3" json:"data_provider_id,omitempty"`
	// The ID of the operator of the charger
	OperatorId string `protobuf:"bytes,3,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	// The type of usage for this charger point (is it public, membership required, etc)
	UsageTypeId string `protobuf:"bytes,4,opt,name=usage_type_id,json=usageTypeId,proto3" json:"usage_type_id,omitempty"`
	// The address
	Address *Address `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	// The connections available at this charge point
	Connections []*Connection `protobuf:"bytes,6,rep,name=connections,proto3" json:"connections,omitempty"`
	// The number of charging points
	NumPoints int64 `protobuf:"varint,7,opt,name=num_points,json=numPoints,proto3" json:"num_points,omitempty"`
	// The cost of charging
	Cost string `protobuf:"bytes,8,opt,name=cost,proto3" json:"cost,omitempty"`
	// The operator
	Operator *Operator `protobuf:"bytes,10,opt,name=operator,proto3" json:"operator,omitempty"`
	// The type of usage
	UsageType *UsageType `protobuf:"bytes,11,opt,name=usage_type,json=usageType,proto3" json:"usage_type,omitempty"`
}

func (x *Poi) Reset() {
	*x = Poi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_evchargers_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Poi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Poi) ProtoMessage() {}

func (x *Poi) ProtoReflect() protoreflect.Message {
	mi := &file_proto_evchargers_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Poi.ProtoReflect.Descriptor instead.
func (*Poi) Descriptor() ([]byte, []int) {
	return file_proto_evchargers_proto_rawDescGZIP(), []int{4}
}

func (x *Poi) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Poi) GetDataProviderId() string {
	if x != nil {
		return x.DataProviderId
	}
	return ""
}

func (x *Poi) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

func (x *Poi) GetUsageTypeId() string {
	if x != nil {
		return x.UsageTypeId
	}
	return ""
}

func (x *Poi) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Poi) GetConnections() []*Connection {
	if x != nil {
		return x.Connections
	}
	return nil
}

func (x *Poi) GetNumPoints() int64 {
	if x != nil {
		return x.NumPoints
	}
	return 0
}

func (x *Poi) GetCost() string {
	if x != nil {
		return x.Cost
	}
	return ""
}

func (x *Poi) GetOperator() *Operator {
	if x != nil {
		return x.Operator
	}
	return nil
}

func (x *Poi) GetUsageType() *UsageType {
	if x != nil {
		return x.UsageType
	}
	return nil
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location        *Coordinates `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Title           string       `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	AddressLine_1   string       `protobuf:"bytes,3,opt,name=address_line_1,json=addressLine1,proto3" json:"address_line_1,omitempty"`
	AddressLine_2   string       `protobuf:"bytes,4,opt,name=address_line_2,json=addressLine2,proto3" json:"address_line_2,omitempty"`
	Town            string       `protobuf:"bytes,5,opt,name=town,proto3" json:"town,omitempty"`
	StateOrProvince string       `protobuf:"bytes,6,opt,name=state_or_province,json=stateOrProvince,proto3" json:"state_or_province,omitempty"`
	// Any comments about how to access the charger
	AccessComments string   `protobuf:"bytes,7,opt,name=access_comments,json=accessComments,proto3" json:"access_comments,omitempty"`
	Postcode       string   `protobuf:"bytes,8,opt,name=postcode,proto3" json:"postcode,omitempty"`
	CountryId      string   `protobuf:"bytes,9,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`
	Country        *Country `protobuf:"bytes,10,opt,name=country,proto3" json:"country,omitempty"`
	LatLng         string   `protobuf:"bytes,11,opt,name=lat_lng,json=latLng,proto3" json:"lat_lng,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_evchargers_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_proto_evchargers_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_proto_evchargers_proto_rawDescGZIP(), []int{5}
}

func (x *Address) GetLocation() *Coordinates {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *Address) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Address) GetAddressLine_1() string {
	if x != nil {
		return x.AddressLine_1
	}
	return ""
}

func (x *Address) GetAddressLine_2() string {
	if x != nil {
		return x.AddressLine_2
	}
	return ""
}

func (x *Address) GetTown() string {
	if x != nil {
		return x.Town
	}
	return ""
}

func (x *Address) GetStateOrProvince() string {
	if x != nil {
		return x.StateOrProvince
	}
	return ""
}

func (x *Address) GetAccessComments() string {
	if x != nil {
		return x.AccessComments
	}
	return ""
}

func (x *Address) GetPostcode() string {
	if x != nil {
		return x.Postcode
	}
	return ""
}

func (x *Address) GetCountryId() string {
	if x != nil {
		return x.CountryId
	}
	return ""
}

func (x *Address) GetCountry() *Country {
	if x != nil {
		return x.Country
	}
	return nil
}

func (x *Address) GetLatLng() string {
	if x != nil {
		return x.LatLng
	}
	return ""
}

type Connection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the connection type
	ConnectionTypeId string `protobuf:"bytes,1,opt,name=connection_type_id,json=connectionTypeId,proto3" json:"connection_type_id,omitempty"`
	Reference        string `protobuf:"bytes,2,opt,name=reference,proto3" json:"reference,omitempty"`
	// The level of charging power available
	LevelId string `protobuf:"bytes,4,opt,name=level_id,json=levelId,proto3" json:"level_id,omitempty"`
	// The amps offered
	Amps float32 `protobuf:"fixed32,5,opt,name=amps,proto3" json:"amps,omitempty"`
	// The voltage offered
	Voltage float32 `protobuf:"fixed32,6,opt,name=voltage,proto3" json:"voltage,omitempty"`
	// The power in KW
	Power float32 `protobuf:"fixed32,7,opt,name=power,proto3" json:"power,omitempty"`
	// The current
	Current        string          `protobuf:"bytes,8,opt,name=current,proto3" json:"current,omitempty"`
	ConnectionType *ConnectionType `protobuf:"bytes,9,opt,name=connection_type,json=connectionType,proto3" json:"connection_type,omitempty"`
	Level          *ChargerType    `protobuf:"bytes,10,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *Connection) Reset() {
	*x = Connection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_evchargers_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connection) ProtoMessage() {}

func (x *Connection) ProtoReflect() protoreflect.Message {
	mi := &file_proto_evchargers_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connection.ProtoReflect.Descriptor instead.
func (*Connection) Descriptor() ([]byte, []int) {
	return file_proto_evchargers_proto_rawDescGZIP(), []int{6}
}

func (x *Connection) GetConnectionTypeId() string {
	if x != nil {
		return x.ConnectionTypeId
	}
	return ""
}

func (x *Connection) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *Connection) GetLevelId() string {
	if x != nil {
		return x.LevelId
	}
	return ""
}

func (x *Connection) GetAmps() float32 {
	if x != nil {
		return x.Amps
	}
	return 0
}

func (x *Connection) GetVoltage() float32 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *Connection) GetPower() float32 {
	if x != nil {
		return x.Power
	}
	return 0
}

func (x *Connection) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *Connection) GetConnectionType() *ConnectionType {
	if x != nil {
		return x.ConnectionType
	}
	return nil
}

func (x *Connection) GetLevel() *ChargerType {
	if x != nil {
		return x.Level
	}
	return nil
}

// Retrieve reference data as used by this API and in conjunction with the Search endpoint
type ReferenceDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReferenceDataRequest) Reset() {
	*x = ReferenceDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_evchargers_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReferenceDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReferenceDataRequest) ProtoMessage() {}

func (x *ReferenceDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_evchargers_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReferenceDataRequest.ProtoReflect.Descriptor instead.
func (*ReferenceDataRequest) Descriptor() ([]byte, []int) {
	return file_proto_evchargers_proto_rawDescGZIP(), []int{7}
}

type ReferenceDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The types of charger
	ChargerTypes []*ChargerType `protobuf:"bytes,1,rep,name=charger_types,json=chargerTypes,proto3" json:"charger_types,omitempty"`
	// The types of connection
	ConnectionTypes []*ConnectionType `protobuf:"bytes,2,rep,name=connection_types,json=connectionTypes,proto3" json:"connection_types,omitempty"`
	// The types of current
	CurrentTypes []*CurrentType `protobuf:"bytes,3,rep,name=current_types,json=currentTypes,proto3" json:"current_types,omitempty"`
	// The countries
	Countries []*Country `protobuf:"bytes,4,rep,name=countries,proto3" json:"countries,omitempty"`
	// The providers of the charger data
	DataProviders []*DataProvider `protobuf:"bytes,5,rep,name=data_providers,json=dataProviders,proto3" json:"data_providers,omitempty"`
	// The companies operating the chargers
	Operators []*Operator `protobuf:"bytes,6,rep,name=operators,proto3" json:"operators,omitempty"`
	// The status of the charger
	StatusTypes []*StatusType `protobuf:"bytes,7,rep,name=status_types,json=statusTypes,proto3" json:"status_types,omitempty"`
	// The status of a submission
	SubmissionStatusTypes []*SubmissionStatusType `protobuf:"bytes,8,rep,name=submission_status_types,json=submissionStatusTypes,proto3" json:"submission_status_types,omitempty"`
	// The different types of usage
	UsageTypes []*UsageType `protobuf:"bytes,9,rep,name=usage_types,json=usageTypes,proto3" json:"usage_types,omitempty"`
	// The types of user comment
	UserCommentTypes []*UserCommentType `protobuf:"bytes,10,rep,name=user_comment_types,json=userCommentTypes,proto3" json:"user_comment_types,omitempty"`
	// The types of checkin status
	CheckinStatusTypes []*CheckinStatusType `protobuf:"bytes,11,rep,name=checkin_status_types,json=checkinStatusTypes,proto3" json:"checkin_status_types,omitempty"`
}

func (x *ReferenceDataResponse) Reset() {
	*x = ReferenceDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_evchargers_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReferenceDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReferenceDataResponse) ProtoMessage() {}

func (x *ReferenceDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_evchargers_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReferenceDataResponse.ProtoReflect.Descriptor instead.
func (*ReferenceDataResponse) Descriptor() ([]byte, []int) {
	return file_proto_evchargers_proto_rawDescGZIP(), []int{8}
}

func (x *ReferenceDataResponse) GetChargerTypes() []*ChargerType {
	if x != nil {
		return x.ChargerTypes
	}
	return nil
}

func (x *ReferenceDataResponse) GetConnectionTypes() []*ConnectionType {
	if x != nil {
		return x.ConnectionTypes
	}
	return nil
}

func (x *ReferenceDataResponse) GetCurrentTypes() []*CurrentType {
	if x != nil {
		return x.CurrentTypes
	}
	return nil
}

func (x *ReferenceDataResponse) GetCountries() []*Country {
	if x != nil {
		return x.Countries
	}
	return nil
}

func (x *ReferenceDataResponse) GetDataProviders() []*DataProvider {
	if x != nil {
		return x.DataProviders
	}
	return nil
}

func (x *ReferenceDataResponse) GetOperators() []*Operator {
	if x != nil {
		return x.Operators
	}
	return nil
}

func (x *ReferenceDataResponse) GetStatusTypes() []*StatusType {
	if x != nil {
		return x.StatusTypes
	}
	return nil
}

func (x *ReferenceDataResponse) GetSubmissionStatusTypes() []*SubmissionStatusType {
	if x != nil {
		return x.SubmissionStatusTypes
	}
	return nil
}

func (x *ReferenceDataResponse) GetUsageTypes() []*UsageType {
	if x != nil {
		return x.UsageTypes
	}
	return nil
}

func (x *ReferenceDataResponse) GetUserCommentTypes() []*UserCommentType {
	if x != nil {
		return x.UserCommentTypes
	}
	return nil
}

func (x *ReferenceDataResponse) GetCheckinStatusTypes() []*CheckinStatusType {
	if x != nil {
		return x.CheckinStatusTypes
	}
	return nil
}

type ChargerType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title    string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Comments string `protobuf:"bytes,3,opt,name=comments,proto3" json:"comments,omitempty"`
	// Is this 40KW+
	IsFastChargeCapable bool `protobuf:"varint,4,opt,name=is_fast_charge_capable,json=isFastChargeCapable,proto3" json:"is_fast_charge_capable,omitempty"`
}

func (x *ChargerType) Reset() {
	*x = ChargerType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_evchargers_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargerType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargerType) ProtoMessage() {}

func (x *ChargerType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_evchargers_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargerType.ProtoReflect.Descriptor instead.
func (*ChargerType) Descriptor() ([]byte, []int) {
	return file_proto_evchargers_proto_rawDescGZIP(), []int{9}
}

func (x *ChargerType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChargerType) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ChargerType) GetComments() string {
	if x != nil {
		return x.Comments
	}
	return ""
}

func (x *ChargerType) GetIsFastChargeCapable() bool {
	if x != nil {
		return x.IsFastChargeCapable
	}
	return false
}

type ConnectionType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title          string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	FormalName     string `protobuf:"bytes,3,opt,name=formal_name,json=formalName,proto3" json:"formal_name,omitempty"`
	IsDiscontinued bool   `protobuf:"varint,4,opt,name=is_discontinued,json=isDiscontinued,proto3" json:"is_discontinued,omitempty"`
	IsObsolete     bool   `protobuf:"varint,5,opt,name=is_obsolete,json=isObsolete,proto3" json:"is_obsolete,omitempty"`
}

func (x *ConnectionType) Reset() {
	*x = ConnectionType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_evchargers_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionType) ProtoMessage() {}

func (x *ConnectionType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_evchargers_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionType.ProtoReflect.Descriptor instead.
func (*ConnectionType) Descriptor() ([]byte, []int) {
	return file_proto_evchargers_proto_rawDescGZIP(), []int{10}
}

func (x *ConnectionType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConnectionType) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ConnectionType) GetFormalName() string {
	if x != nil {
		return x.FormalName
	}
	return ""
}

func (x *ConnectionType) GetIsDiscontinued() bool {
	if x != nil {
		return x.IsDiscontinued
	}
	return false
}

func (x *ConnectionType) GetIsObsolete() bool {
	if x != nil {
		return x.IsObsolete
	}
	return false
}

type CurrentType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CurrentType) Reset() {
	*x = CurrentType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_evchargers_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrentType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentType) ProtoMessage() {}

func (x *CurrentType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_evchargers_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentType.ProtoReflect.Descriptor instead.
func (*CurrentType) Descriptor() ([]byte, []int) {
	return file_proto_evchargers_proto_rawDescGZIP(), []int{11}
}

func (x *CurrentType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CurrentType) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CurrentType) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Country struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	IsoCode       string `protobuf:"bytes,3,opt,name=iso_code,json=isoCode,proto3" json:"iso_code,omitempty"`
	ContinentCode string `protobuf:"bytes,4,opt,name=continent_code,json=continentCode,proto3" json:"continent_code,omitempty"`
}

func (x *Country) Reset() {
	*x = Country{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_evchargers_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Country) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Country) ProtoMessage() {}

func (x *Country) ProtoReflect() protoreflect.Message {
	mi := &file_proto_evchargers_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Country.ProtoReflect.Descriptor instead.
func (*Country) Descriptor() ([]byte, []int) {
	return file_proto_evchargers_proto_rawDescGZIP(), []int{12}
}

func (x *Country) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Country) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Country) GetIsoCode() string {
	if x != nil {
		return x.IsoCode
	}
	return ""
}

func (x *Country) GetContinentCode() string {
	if x != nil {
		return x.ContinentCode
	}
	return ""
}

type DataProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                  string                  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Website                string                  `protobuf:"bytes,3,opt,name=website,proto3" json:"website,omitempty"`
	Comments               string                  `protobuf:"bytes,4,opt,name=comments,proto3" json:"comments,omitempty"`
	DataProviderStatusType *DataProviderStatusType `protobuf:"bytes,5,opt,name=data_provider_status_type,json=dataProviderStatusType,proto3" json:"data_provider_status_type,omitempty"`
	// How is this data licensed
	License string `protobuf:"bytes,6,opt,name=license,proto3" json:"license,omitempty"`
}

func (x *DataProvider) Reset() {
	*x = DataProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_evchargers_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataProvider) ProtoMessage() {}

func (x *DataProvider) ProtoReflect() protoreflect.Message {
	mi := &file_proto_evchargers_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataProvider.ProtoReflect.Descriptor instead.
func (*DataProvider) Descriptor() ([]byte, []int) {
	return file_proto_evchargers_proto_rawDescGZIP(), []int{13}
}

func (x *DataProvider) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DataProvider) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DataProvider) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *DataProvider) GetComments() string {
	if x != nil {
		return x.Comments
	}
	return ""
}

func (x *DataProvider) GetDataProviderStatusType() *DataProviderStatusType {
	if x != nil {
		return x.DataProviderStatusType
	}
	return nil
}

func (x *DataProvider) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

type DataProviderStatusType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title             string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	IsProviderEnabled bool   `protobuf:"varint,3,opt,name=is_provider_enabled,json=isProviderEnabled,proto3" json:"is_provider_enabled,omitempty"`
}

func (x *DataProviderStatusType) Reset() {
	*x = DataProviderStatusType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_evchargers_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataProviderStatusType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataProviderStatusType) ProtoMessage() {}

func (x *DataProviderStatusType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_evchargers_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataProviderStatusType.ProtoReflect.Descriptor instead.
func (*DataProviderStatusType) Descriptor() ([]byte, []int) {
	return file_proto_evchargers_proto_rawDescGZIP(), []int{14}
}

func (x *DataProviderStatusType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DataProviderStatusType) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DataProviderStatusType) GetIsProviderEnabled() bool {
	if x != nil {
		return x.IsProviderEnabled
	}
	return false
}

type Operator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title    string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Website  string `protobuf:"bytes,3,opt,name=website,proto3" json:"website,omitempty"`
	Comments string `protobuf:"bytes,4,opt,name=comments,proto3" json:"comments,omitempty"`
	// Is this operator a private individual vs a company
	IsPrivateIndividual bool   `protobuf:"varint,5,opt,name=is_private_individual,json=isPrivateIndividual,proto3" json:"is_private_individual,omitempty"`
	ContactEmail        string `protobuf:"bytes,6,opt,name=contact_email,json=contactEmail,proto3" json:"contact_email,omitempty"`
	PhonePrimary        string `protobuf:"bytes,7,opt,name=phone_primary,json=phonePrimary,proto3" json:"phone_primary,omitempty"`
	PhoneSecondary      string `protobuf:"bytes,8,opt,name=phone_secondary,json=phoneSecondary,proto3" json:"phone_secondary,omitempty"`
	FaultReportEmail    string `protobuf:"bytes,9,opt,name=fault_report_email,json=faultReportEmail,proto3" json:"fault_report_email,omitempty"`
}

func (x *Operator) Reset() {
	*x = Operator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_evchargers_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operator) ProtoMessage() {}

func (x *Operator) ProtoReflect() protoreflect.Message {
	mi := &file_proto_evchargers_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operator.ProtoReflect.Descriptor instead.
func (*Operator) Descriptor() ([]byte, []int) {
	return file_proto_evchargers_proto_rawDescGZIP(), []int{15}
}

func (x *Operator) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Operator) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Operator) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *Operator) GetComments() string {
	if x != nil {
		return x.Comments
	}
	return ""
}

func (x *Operator) GetIsPrivateIndividual() bool {
	if x != nil {
		return x.IsPrivateIndividual
	}
	return false
}

func (x *Operator) GetContactEmail() string {
	if x != nil {
		return x.ContactEmail
	}
	return ""
}

func (x *Operator) GetPhonePrimary() string {
	if x != nil {
		return x.PhonePrimary
	}
	return ""
}

func (x *Operator) GetPhoneSecondary() string {
	if x != nil {
		return x.PhoneSecondary
	}
	return ""
}

func (x *Operator) GetFaultReportEmail() string {
	if x != nil {
		return x.FaultReportEmail
	}
	return ""
}

type StatusType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	IsOperational bool   `protobuf:"varint,3,opt,name=is_operational,json=isOperational,proto3" json:"is_operational,omitempty"`
}

func (x *StatusType) Reset() {
	*x = StatusType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_evchargers_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusType) ProtoMessage() {}

func (x *StatusType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_evchargers_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusType.ProtoReflect.Descriptor instead.
func (*StatusType) Descriptor() ([]byte, []int) {
	return file_proto_evchargers_proto_rawDescGZIP(), []int{16}
}

func (x *StatusType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StatusType) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *StatusType) GetIsOperational() bool {
	if x != nil {
		return x.IsOperational
	}
	return false
}

type SubmissionStatusType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title  string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	IsLive bool   `protobuf:"varint,3,opt,name=is_live,json=isLive,proto3" json:"is_live,omitempty"`
}

func (x *SubmissionStatusType) Reset() {
	*x = SubmissionStatusType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_evchargers_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmissionStatusType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionStatusType) ProtoMessage() {}

func (x *SubmissionStatusType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_evchargers_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionStatusType.ProtoReflect.Descriptor instead.
func (*SubmissionStatusType) Descriptor() ([]byte, []int) {
	return file_proto_evchargers_proto_rawDescGZIP(), []int{17}
}

func (x *SubmissionStatusType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SubmissionStatusType) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SubmissionStatusType) GetIsLive() bool {
	if x != nil {
		return x.IsLive
	}
	return false
}

type UsageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	IsPayAtLocation      bool   `protobuf:"varint,3,opt,name=is_pay_at_location,json=isPayAtLocation,proto3" json:"is_pay_at_location,omitempty"`
	IsMembershipRequired bool   `protobuf:"varint,4,opt,name=is_membership_required,json=isMembershipRequired,proto3" json:"is_membership_required,omitempty"`
	IsAccessKeyRequired  bool   `protobuf:"varint,5,opt,name=is_access_key_required,json=isAccessKeyRequired,proto3" json:"is_access_key_required,omitempty"`
}

func (x *UsageType) Reset() {
	*x = UsageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_evchargers_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsageType) ProtoMessage() {}

func (x *UsageType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_evchargers_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsageType.ProtoReflect.Descriptor instead.
func (*UsageType) Descriptor() ([]byte, []int) {
	return file_proto_evchargers_proto_rawDescGZIP(), []int{18}
}

func (x *UsageType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UsageType) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UsageType) GetIsPayAtLocation() bool {
	if x != nil {
		return x.IsPayAtLocation
	}
	return false
}

func (x *UsageType) GetIsMembershipRequired() bool {
	if x != nil {
		return x.IsMembershipRequired
	}
	return false
}

func (x *UsageType) GetIsAccessKeyRequired() bool {
	if x != nil {
		return x.IsAccessKeyRequired
	}
	return false
}

type UserCommentType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *UserCommentType) Reset() {
	*x = UserCommentType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_evchargers_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCommentType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCommentType) ProtoMessage() {}

func (x *UserCommentType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_evchargers_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCommentType.ProtoReflect.Descriptor instead.
func (*UserCommentType) Descriptor() ([]byte, []int) {
	return file_proto_evchargers_proto_rawDescGZIP(), []int{19}
}

func (x *UserCommentType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserCommentType) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type CheckinStatusType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	IsPositive  bool   `protobuf:"varint,3,opt,name=is_positive,json=isPositive,proto3" json:"is_positive,omitempty"`
	IsAutomated bool   `protobuf:"varint,4,opt,name=is_automated,json=isAutomated,proto3" json:"is_automated,omitempty"`
}

func (x *CheckinStatusType) Reset() {
	*x = CheckinStatusType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_evchargers_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckinStatusType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckinStatusType) ProtoMessage() {}

func (x *CheckinStatusType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_evchargers_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckinStatusType.ProtoReflect.Descriptor instead.
func (*CheckinStatusType) Descriptor() ([]byte, []int) {
	return file_proto_evchargers_proto_rawDescGZIP(), []int{20}
}

func (x *CheckinStatusType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CheckinStatusType) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CheckinStatusType) GetIsPositive() bool {
	if x != nil {
		return x.IsPositive
	}
	return false
}

func (x *CheckinStatusType) GetIsAutomated() bool {
	if x != nil {
		return x.IsAutomated
	}
	return false
}

var File_proto_evchargers_proto protoreflect.FileDescriptor

var file_proto_evchargers_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x76, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x65, 0x76, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x72, 0x73, 0x22, 0xea, 0x02, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x76, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x03, 0x62, 0x6f, 0x78, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x76, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x72,
	0x73, 0x2e, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x78, 0x52, 0x03, 0x62,
	0x6f, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x22, 0x47, 0x0a, 0x0b, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x7d, 0x0a, 0x0b, 0x42, 0x6f,
	0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x78, 0x12, 0x38, 0x0a, 0x0b, 0x62, 0x6f, 0x74,
	0x74, 0x6f, 0x6d, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x65, 0x76, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x4c,
	0x65, 0x66, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x74, 0x6f, 0x70, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x76, 0x63, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x52,
	0x08, 0x74, 0x6f, 0x70, 0x52, 0x69, 0x67, 0x68, 0x74, 0x22, 0x35, 0x0a, 0x0e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x70,
	0x6f, 0x69, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x76, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x50, 0x6f, 0x69, 0x52, 0x04, 0x70, 0x6f, 0x69, 0x73,
	0x22, 0x88, 0x03, 0x0a, 0x03, 0x50, 0x6f, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x76, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x38, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x76,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x76, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x72, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x76, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x75, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8c, 0x03, 0x0a, 0x07,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x76, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x73, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e, 0x65, 0x31, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e, 0x65, 0x32, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x6f, 0x77, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x6f,
	0x77, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x72, 0x5f, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x2d, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x76, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x72, 0x73,
	0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x61, 0x74, 0x5f, 0x6c, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x22, 0xc5, 0x02, 0x0a, 0x0a, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x6d, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04,
	0x61, 0x6d, 0x70, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70,
	0x6f, 0x77, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x43,
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x76, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x76, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x72, 0x73, 0x2e,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xeb, 0x05, 0x0a, 0x15, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x76,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x45, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65,
	0x76, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0d, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x65, 0x76, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x76, 0x63,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0e, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x76, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x72, 0x73, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x0d, 0x64, 0x61,
	0x74, 0x61, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x65, 0x76, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12,
	0x39, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x76, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x72, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x58, 0x0a, 0x17, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x76,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x15, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0b, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x76, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x12,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x76, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x14, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x76, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x72, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x12, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x0b, 0x43, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x69, 0x73,
	0x5f, 0x66, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x63, 0x61, 0x70,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x73, 0x46, 0x61,
	0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x61, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x22,
	0xa1, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x73, 0x5f,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75,
	0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4f, 0x62, 0x73, 0x6f, 0x6c,
	0x65, 0x74, 0x65, 0x22, 0x55, 0x0a, 0x0b, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x71, 0x0a, 0x07, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x73, 0x6f, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69,
	0x73, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e,
	0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xe3, 0x01,
	0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x5d, 0x0a, 0x19, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x65, 0x76, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x16, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x22, 0x6e, 0x0a, 0x16, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x11, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x22, 0xbb, 0x02, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x15,
	0x69, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x76,
	0x69, 0x64, 0x75, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x73, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x70,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x61, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x22, 0x59, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69,
	0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x22, 0x55, 0x0a, 0x14,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73,
	0x5f, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4c,
	0x69, 0x76, 0x65, 0x22, 0xc9, 0x01, 0x0a, 0x09, 0x55, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x70, 0x61,
	0x79, 0x5f, 0x61, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x50, 0x61, 0x79, 0x41, 0x74, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x69, 0x73,
	0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x73, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22,
	0x37, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x7d, 0x0a, 0x11, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x32, 0xa7, 0x01, 0x0a, 0x0a, 0x45, 0x76, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x72, 0x73, 0x12, 0x41, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x12, 0x19, 0x2e, 0x65, 0x76, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x76,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0d, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x2e, 0x65, 0x76, 0x63,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x65,
	0x76, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x14, 0x5a, 0x12, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x65, 0x76, 0x63,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_evchargers_proto_rawDescOnce sync.Once
	file_proto_evchargers_proto_rawDescData = file_proto_evchargers_proto_rawDesc
)

func file_proto_evchargers_proto_rawDescGZIP() []byte {
	file_proto_evchargers_proto_rawDescOnce.Do(func() {
		file_proto_evchargers_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_evchargers_proto_rawDescData)
	})
	return file_proto_evchargers_proto_rawDescData
}

var file_proto_evchargers_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_proto_evchargers_proto_goTypes = []interface{}{
	(*SearchRequest)(nil),          // 0: evchargers.SearchRequest
	(*Coordinates)(nil),            // 1: evchargers.Coordinates
	(*BoundingBox)(nil),            // 2: evchargers.BoundingBox
	(*SearchResponse)(nil),         // 3: evchargers.SearchResponse
	(*Poi)(nil),                    // 4: evchargers.Poi
	(*Address)(nil),                // 5: evchargers.Address
	(*Connection)(nil),             // 6: evchargers.Connection
	(*ReferenceDataRequest)(nil),   // 7: evchargers.ReferenceDataRequest
	(*ReferenceDataResponse)(nil),  // 8: evchargers.ReferenceDataResponse
	(*ChargerType)(nil),            // 9: evchargers.ChargerType
	(*ConnectionType)(nil),         // 10: evchargers.ConnectionType
	(*CurrentType)(nil),            // 11: evchargers.CurrentType
	(*Country)(nil),                // 12: evchargers.Country
	(*DataProvider)(nil),           // 13: evchargers.DataProvider
	(*DataProviderStatusType)(nil), // 14: evchargers.DataProviderStatusType
	(*Operator)(nil),               // 15: evchargers.Operator
	(*StatusType)(nil),             // 16: evchargers.StatusType
	(*SubmissionStatusType)(nil),   // 17: evchargers.SubmissionStatusType
	(*UsageType)(nil),              // 18: evchargers.UsageType
	(*UserCommentType)(nil),        // 19: evchargers.UserCommentType
	(*CheckinStatusType)(nil),      // 20: evchargers.CheckinStatusType
}
var file_proto_evchargers_proto_depIdxs = []int32{
	1,  // 0: evchargers.SearchRequest.location:type_name -> evchargers.Coordinates
	2,  // 1: evchargers.SearchRequest.box:type_name -> evchargers.BoundingBox
	1,  // 2: evchargers.BoundingBox.bottom_left:type_name -> evchargers.Coordinates
	1,  // 3: evchargers.BoundingBox.top_right:type_name -> evchargers.Coordinates
	4,  // 4: evchargers.SearchResponse.pois:type_name -> evchargers.Poi
	5,  // 5: evchargers.Poi.address:type_name -> evchargers.Address
	6,  // 6: evchargers.Poi.connections:type_name -> evchargers.Connection
	15, // 7: evchargers.Poi.operator:type_name -> evchargers.Operator
	18, // 8: evchargers.Poi.usage_type:type_name -> evchargers.UsageType
	1,  // 9: evchargers.Address.location:type_name -> evchargers.Coordinates
	12, // 10: evchargers.Address.country:type_name -> evchargers.Country
	10, // 11: evchargers.Connection.connection_type:type_name -> evchargers.ConnectionType
	9,  // 12: evchargers.Connection.level:type_name -> evchargers.ChargerType
	9,  // 13: evchargers.ReferenceDataResponse.charger_types:type_name -> evchargers.ChargerType
	10, // 14: evchargers.ReferenceDataResponse.connection_types:type_name -> evchargers.ConnectionType
	11, // 15: evchargers.ReferenceDataResponse.current_types:type_name -> evchargers.CurrentType
	12, // 16: evchargers.ReferenceDataResponse.countries:type_name -> evchargers.Country
	13, // 17: evchargers.ReferenceDataResponse.data_providers:type_name -> evchargers.DataProvider
	15, // 18: evchargers.ReferenceDataResponse.operators:type_name -> evchargers.Operator
	16, // 19: evchargers.ReferenceDataResponse.status_types:type_name -> evchargers.StatusType
	17, // 20: evchargers.ReferenceDataResponse.submission_status_types:type_name -> evchargers.SubmissionStatusType
	18, // 21: evchargers.ReferenceDataResponse.usage_types:type_name -> evchargers.UsageType
	19, // 22: evchargers.ReferenceDataResponse.user_comment_types:type_name -> evchargers.UserCommentType
	20, // 23: evchargers.ReferenceDataResponse.checkin_status_types:type_name -> evchargers.CheckinStatusType
	14, // 24: evchargers.DataProvider.data_provider_status_type:type_name -> evchargers.DataProviderStatusType
	0,  // 25: evchargers.Evchargers.Search:input_type -> evchargers.SearchRequest
	7,  // 26: evchargers.Evchargers.ReferenceData:input_type -> evchargers.ReferenceDataRequest
	3,  // 27: evchargers.Evchargers.Search:output_type -> evchargers.SearchResponse
	8,  // 28: evchargers.Evchargers.ReferenceData:output_type -> evchargers.ReferenceDataResponse
	27, // [27:29] is the sub-list for method output_type
	25, // [25:27] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_proto_evchargers_proto_init() }
func file_proto_evchargers_proto_init() {
	if File_proto_evchargers_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_evchargers_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_evchargers_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coordinates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_evchargers_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoundingBox); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_evchargers_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_evchargers_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Poi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_evchargers_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_evchargers_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_evchargers_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReferenceDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_evchargers_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReferenceDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_evchargers_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargerType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_evchargers_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_evchargers_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrentType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_evchargers_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Country); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_evchargers_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_evchargers_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataProviderStatusType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_evchargers_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_evchargers_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_evchargers_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmissionStatusType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_evchargers_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_evchargers_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCommentType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_evchargers_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckinStatusType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_evchargers_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_evchargers_proto_goTypes,
		DependencyIndexes: file_proto_evchargers_proto_depIdxs,
		MessageInfos:      file_proto_evchargers_proto_msgTypes,
	}.Build()
	File_proto_evchargers_proto = out.File
	file_proto_evchargers_proto_rawDesc = nil
	file_proto_evchargers_proto_goTypes = nil
	file_proto_evchargers_proto_depIdxs = nil
}
