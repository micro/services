// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: proto/sunnah.proto

package sunnah

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Collection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the collection e.g bukhari
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Title of the collection e.g Sahih al-Bukhari
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// Arabic title if available
	ArabicTitle string `protobuf:"bytes,3,opt,name=arabic_title,json=arabicTitle,proto3" json:"arabic_title,omitempty"`
	// An introduction explaining the collection
	Summary string `protobuf:"bytes,4,opt,name=summary,proto3" json:"summary,omitempty"`
	// Total hadiths in the collection
	Hadiths int32 `protobuf:"varint,5,opt,name=hadiths,proto3" json:"hadiths,omitempty"`
}

func (x *Collection) Reset() {
	*x = Collection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sunnah_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collection) ProtoMessage() {}

func (x *Collection) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sunnah_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collection.ProtoReflect.Descriptor instead.
func (*Collection) Descriptor() ([]byte, []int) {
	return file_proto_sunnah_proto_rawDescGZIP(), []int{0}
}

func (x *Collection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Collection) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Collection) GetArabicTitle() string {
	if x != nil {
		return x.ArabicTitle
	}
	return ""
}

func (x *Collection) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Collection) GetHadiths() int32 {
	if x != nil {
		return x.Hadiths
	}
	return 0
}

type Book struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// number of the book e.g 1
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// name of the book
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// arabic name of the book
	ArabicName string `protobuf:"bytes,3,opt,name=arabic_name,json=arabicName,proto3" json:"arabic_name,omitempty"`
	// number of hadiths in the book
	Hadiths int32 `protobuf:"varint,4,opt,name=hadiths,proto3" json:"hadiths,omitempty"`
}

func (x *Book) Reset() {
	*x = Book{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sunnah_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Book) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Book) ProtoMessage() {}

func (x *Book) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sunnah_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Book.ProtoReflect.Descriptor instead.
func (*Book) Descriptor() ([]byte, []int) {
	return file_proto_sunnah_proto_rawDescGZIP(), []int{1}
}

func (x *Book) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Book) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Book) GetArabicName() string {
	if x != nil {
		return x.ArabicName
	}
	return ""
}

func (x *Book) GetHadiths() int32 {
	if x != nil {
		return x.Hadiths
	}
	return 0
}

type Chapter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the chapter id e.g 1
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// the chapter key e.g 1.00
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// the book number
	Book int32 `protobuf:"varint,3,opt,name=book,proto3" json:"book,omitempty"`
	// title of the chapter
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	// arabic title
	ArabicTitle string `protobuf:"bytes,5,opt,name=arabic_title,json=arabicTitle,proto3" json:"arabic_title,omitempty"`
}

func (x *Chapter) Reset() {
	*x = Chapter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sunnah_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chapter) ProtoMessage() {}

func (x *Chapter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sunnah_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chapter.ProtoReflect.Descriptor instead.
func (*Chapter) Descriptor() ([]byte, []int) {
	return file_proto_sunnah_proto_rawDescGZIP(), []int{2}
}

func (x *Chapter) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Chapter) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Chapter) GetBook() int32 {
	if x != nil {
		return x.Book
	}
	return 0
}

func (x *Chapter) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Chapter) GetArabicTitle() string {
	if x != nil {
		return x.ArabicTitle
	}
	return ""
}

type Hadith struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// hadith id
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// the chapter id
	Chapter int32 `protobuf:"varint,2,opt,name=chapter,proto3" json:"chapter,omitempty"`
	// the chapter key
	ChapterKey string `protobuf:"bytes,3,opt,name=chapter_key,json=chapterKey,proto3" json:"chapter_key,omitempty"`
	// the chapter title
	ChapterTitle string `protobuf:"bytes,4,opt,name=chapter_title,json=chapterTitle,proto3" json:"chapter_title,omitempty"`
	// the arabic chapter title
	ArabicChapterTitle string `protobuf:"bytes,5,opt,name=arabic_chapter_title,json=arabicChapterTitle,proto3" json:"arabic_chapter_title,omitempty"`
	// hadith text
	Text string `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	// the arabic text
	ArabicText string `protobuf:"bytes,7,opt,name=arabic_text,json=arabicText,proto3" json:"arabic_text,omitempty"`
}

func (x *Hadith) Reset() {
	*x = Hadith{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sunnah_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hadith) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hadith) ProtoMessage() {}

func (x *Hadith) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sunnah_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hadith.ProtoReflect.Descriptor instead.
func (*Hadith) Descriptor() ([]byte, []int) {
	return file_proto_sunnah_proto_rawDescGZIP(), []int{3}
}

func (x *Hadith) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Hadith) GetChapter() int32 {
	if x != nil {
		return x.Chapter
	}
	return 0
}

func (x *Hadith) GetChapterKey() string {
	if x != nil {
		return x.ChapterKey
	}
	return ""
}

func (x *Hadith) GetChapterTitle() string {
	if x != nil {
		return x.ChapterTitle
	}
	return ""
}

func (x *Hadith) GetArabicChapterTitle() string {
	if x != nil {
		return x.ArabicChapterTitle
	}
	return ""
}

func (x *Hadith) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Hadith) GetArabicText() string {
	if x != nil {
		return x.ArabicText
	}
	return ""
}

// Get a list of available collections. A collection is
// a compilation of hadiths collected and written by an author.
type CollectionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The page in the pagination
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	// Number of collections to limit to
	Limit int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *CollectionsRequest) Reset() {
	*x = CollectionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sunnah_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionsRequest) ProtoMessage() {}

func (x *CollectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sunnah_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionsRequest.ProtoReflect.Descriptor instead.
func (*CollectionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_sunnah_proto_rawDescGZIP(), []int{4}
}

func (x *CollectionsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *CollectionsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type CollectionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collections []*Collection `protobuf:"bytes,1,rep,name=collections,proto3" json:"collections,omitempty"`
}

func (x *CollectionsResponse) Reset() {
	*x = CollectionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sunnah_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionsResponse) ProtoMessage() {}

func (x *CollectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sunnah_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionsResponse.ProtoReflect.Descriptor instead.
func (*CollectionsResponse) Descriptor() ([]byte, []int) {
	return file_proto_sunnah_proto_rawDescGZIP(), []int{5}
}

func (x *CollectionsResponse) GetCollections() []*Collection {
	if x != nil {
		return x.Collections
	}
	return nil
}

// Get a list of books from within a collection. A book can contain many chapters
// each with its own hadiths.
type BooksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the collection
	Collection string `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	// The page in the pagination
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// Limit the number of books returned
	Limit int32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *BooksRequest) Reset() {
	*x = BooksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sunnah_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BooksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooksRequest) ProtoMessage() {}

func (x *BooksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sunnah_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BooksRequest.ProtoReflect.Descriptor instead.
func (*BooksRequest) Descriptor() ([]byte, []int) {
	return file_proto_sunnah_proto_rawDescGZIP(), []int{6}
}

func (x *BooksRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *BooksRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *BooksRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type BooksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the collection
	Collection string `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	// The total overall books
	Total int32 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	// The page requested
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// The limit specified
	Limit int32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	// A list of books
	Books []*Book `protobuf:"bytes,5,rep,name=books,proto3" json:"books,omitempty"`
}

func (x *BooksResponse) Reset() {
	*x = BooksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sunnah_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BooksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooksResponse) ProtoMessage() {}

func (x *BooksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sunnah_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BooksResponse.ProtoReflect.Descriptor instead.
func (*BooksResponse) Descriptor() ([]byte, []int) {
	return file_proto_sunnah_proto_rawDescGZIP(), []int{7}
}

func (x *BooksResponse) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *BooksResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *BooksResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *BooksResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *BooksResponse) GetBooks() []*Book {
	if x != nil {
		return x.Books
	}
	return nil
}

// Get all the chapters of a given book within a collection.
type ChaptersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the collection
	Collection string `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	// number of the book
	Book int32 `protobuf:"varint,2,opt,name=book,proto3" json:"book,omitempty"`
	// The page in the pagination
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// Limit the number of chapters returned
	Limit int32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ChaptersRequest) Reset() {
	*x = ChaptersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sunnah_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChaptersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChaptersRequest) ProtoMessage() {}

func (x *ChaptersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sunnah_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChaptersRequest.ProtoReflect.Descriptor instead.
func (*ChaptersRequest) Descriptor() ([]byte, []int) {
	return file_proto_sunnah_proto_rawDescGZIP(), []int{8}
}

func (x *ChaptersRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *ChaptersRequest) GetBook() int32 {
	if x != nil {
		return x.Book
	}
	return 0
}

func (x *ChaptersRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ChaptersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ChaptersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the collection
	Collection string `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	// number of the book
	Book int32 `protobuf:"varint,2,opt,name=book,proto3" json:"book,omitempty"`
	// The page in the pagination
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// Limit the number of chapters returned
	Limit int32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	// Total chapters in the book
	Total int32 `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
	// The chapters of the book
	Chapters []*Chapter `protobuf:"bytes,6,rep,name=chapters,proto3" json:"chapters,omitempty"`
}

func (x *ChaptersResponse) Reset() {
	*x = ChaptersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sunnah_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChaptersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChaptersResponse) ProtoMessage() {}

func (x *ChaptersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sunnah_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChaptersResponse.ProtoReflect.Descriptor instead.
func (*ChaptersResponse) Descriptor() ([]byte, []int) {
	return file_proto_sunnah_proto_rawDescGZIP(), []int{9}
}

func (x *ChaptersResponse) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *ChaptersResponse) GetBook() int32 {
	if x != nil {
		return x.Book
	}
	return 0
}

func (x *ChaptersResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ChaptersResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ChaptersResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ChaptersResponse) GetChapters() []*Chapter {
	if x != nil {
		return x.Chapters
	}
	return nil
}

// Hadiths returns a list of hadiths and their corresponding text for a
// given book within a collection.
type HadithsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the collection
	Collection string `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	// number of the book
	Book int32 `protobuf:"varint,2,opt,name=book,proto3" json:"book,omitempty"`
	// The page in the pagination
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// Limit the number of hadiths
	Limit int32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *HadithsRequest) Reset() {
	*x = HadithsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sunnah_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HadithsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HadithsRequest) ProtoMessage() {}

func (x *HadithsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sunnah_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HadithsRequest.ProtoReflect.Descriptor instead.
func (*HadithsRequest) Descriptor() ([]byte, []int) {
	return file_proto_sunnah_proto_rawDescGZIP(), []int{10}
}

func (x *HadithsRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *HadithsRequest) GetBook() int32 {
	if x != nil {
		return x.Book
	}
	return 0
}

func (x *HadithsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *HadithsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type HadithsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the collection
	Collection string `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	// number of the book
	Book int32 `protobuf:"varint,2,opt,name=book,proto3" json:"book,omitempty"`
	// The page in the pagination
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// Limit the number of hadiths returned
	Limit int32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	// Total hadiths in the  book
	Total int32 `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
	// The hadiths of the book
	Hadiths []*Hadith `protobuf:"bytes,7,rep,name=hadiths,proto3" json:"hadiths,omitempty"`
}

func (x *HadithsResponse) Reset() {
	*x = HadithsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sunnah_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HadithsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HadithsResponse) ProtoMessage() {}

func (x *HadithsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sunnah_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HadithsResponse.ProtoReflect.Descriptor instead.
func (*HadithsResponse) Descriptor() ([]byte, []int) {
	return file_proto_sunnah_proto_rawDescGZIP(), []int{11}
}

func (x *HadithsResponse) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *HadithsResponse) GetBook() int32 {
	if x != nil {
		return x.Book
	}
	return 0
}

func (x *HadithsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *HadithsResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *HadithsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *HadithsResponse) GetHadiths() []*Hadith {
	if x != nil {
		return x.Hadiths
	}
	return nil
}

var File_proto_sunnah_proto protoreflect.FileDescriptor

var file_proto_sunnah_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x75, 0x6e, 0x6e, 0x61, 0x68, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x75, 0x6e, 0x6e, 0x61, 0x68, 0x22, 0x8d, 0x01, 0x0a,
	0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x72, 0x61, 0x62, 0x69, 0x63, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x61,
	0x62, 0x69, 0x63, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x64, 0x69, 0x74, 0x68, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x61, 0x64, 0x69, 0x74, 0x68, 0x73, 0x22, 0x65, 0x0a, 0x04,
	0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x72, 0x61, 0x62,
	0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x72, 0x61, 0x62, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x64,
	0x69, 0x74, 0x68, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x61, 0x64, 0x69,
	0x74, 0x68, 0x73, 0x22, 0x78, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x72,
	0x61, 0x62, 0x69, 0x63, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x72, 0x61, 0x62, 0x69, 0x63, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xdf, 0x01,
	0x0a, 0x06, 0x48, 0x61, 0x64, 0x69, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x72, 0x61, 0x62,
	0x69, 0x63, 0x5f, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x72, 0x61, 0x62, 0x69, 0x63, 0x43, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x72, 0x61, 0x62, 0x69, 0x63, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x72, 0x61, 0x62, 0x69, 0x63, 0x54, 0x65, 0x78, 0x74, 0x22,
	0x3e, 0x0a, 0x12, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0x4b, 0x0a, 0x13, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x75,
	0x6e, 0x6e, 0x61, 0x68, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x58, 0x0a, 0x0c,
	0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x93, 0x01, 0x0a, 0x0d, 0x42, 0x6f, 0x6f, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x62, 0x6f, 0x6f, 0x6b,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x75, 0x6e, 0x6e, 0x61, 0x68,
	0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x22, 0x6f, 0x0a, 0x0f,
	0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x62,
	0x6f, 0x6f, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xb3, 0x01,
	0x0a, 0x10, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x75, 0x6e, 0x6e, 0x61,
	0x68, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x73, 0x22, 0x6e, 0x0a, 0x0e, 0x48, 0x61, 0x64, 0x69, 0x74, 0x68, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x22, 0xaf, 0x01, 0x0a, 0x0f, 0x48, 0x61, 0x64, 0x69, 0x74, 0x68, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x07, 0x68,
	0x61, 0x64, 0x69, 0x74, 0x68, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73,
	0x75, 0x6e, 0x6e, 0x61, 0x68, 0x2e, 0x48, 0x61, 0x64, 0x69, 0x74, 0x68, 0x52, 0x07, 0x68, 0x61,
	0x64, 0x69, 0x74, 0x68, 0x73, 0x32, 0x89, 0x02, 0x0a, 0x06, 0x53, 0x75, 0x6e, 0x6e, 0x61, 0x68,
	0x12, 0x48, 0x0a, 0x0b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x1a, 0x2e, 0x73, 0x75, 0x6e, 0x6e, 0x61, 0x68, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x75,
	0x6e, 0x6e, 0x61, 0x68, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x05, 0x42, 0x6f,
	0x6f, 0x6b, 0x73, 0x12, 0x14, 0x2e, 0x73, 0x75, 0x6e, 0x6e, 0x61, 0x68, 0x2e, 0x42, 0x6f, 0x6f,
	0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x75, 0x6e, 0x6e,
	0x61, 0x68, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3f, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x12, 0x17,
	0x2e, 0x73, 0x75, 0x6e, 0x6e, 0x61, 0x68, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x75, 0x6e, 0x6e, 0x61, 0x68,
	0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x07, 0x48, 0x61, 0x64, 0x69, 0x74, 0x68, 0x73, 0x12, 0x16,
	0x2e, 0x73, 0x75, 0x6e, 0x6e, 0x61, 0x68, 0x2e, 0x48, 0x61, 0x64, 0x69, 0x74, 0x68, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x75, 0x6e, 0x6e, 0x61, 0x68, 0x2e,
	0x48, 0x61, 0x64, 0x69, 0x74, 0x68, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x73, 0x75, 0x6e,
	0x6e, 0x61, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_sunnah_proto_rawDescOnce sync.Once
	file_proto_sunnah_proto_rawDescData = file_proto_sunnah_proto_rawDesc
)

func file_proto_sunnah_proto_rawDescGZIP() []byte {
	file_proto_sunnah_proto_rawDescOnce.Do(func() {
		file_proto_sunnah_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_sunnah_proto_rawDescData)
	})
	return file_proto_sunnah_proto_rawDescData
}

var file_proto_sunnah_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_sunnah_proto_goTypes = []interface{}{
	(*Collection)(nil),          // 0: sunnah.Collection
	(*Book)(nil),                // 1: sunnah.Book
	(*Chapter)(nil),             // 2: sunnah.Chapter
	(*Hadith)(nil),              // 3: sunnah.Hadith
	(*CollectionsRequest)(nil),  // 4: sunnah.CollectionsRequest
	(*CollectionsResponse)(nil), // 5: sunnah.CollectionsResponse
	(*BooksRequest)(nil),        // 6: sunnah.BooksRequest
	(*BooksResponse)(nil),       // 7: sunnah.BooksResponse
	(*ChaptersRequest)(nil),     // 8: sunnah.ChaptersRequest
	(*ChaptersResponse)(nil),    // 9: sunnah.ChaptersResponse
	(*HadithsRequest)(nil),      // 10: sunnah.HadithsRequest
	(*HadithsResponse)(nil),     // 11: sunnah.HadithsResponse
}
var file_proto_sunnah_proto_depIdxs = []int32{
	0,  // 0: sunnah.CollectionsResponse.collections:type_name -> sunnah.Collection
	1,  // 1: sunnah.BooksResponse.books:type_name -> sunnah.Book
	2,  // 2: sunnah.ChaptersResponse.chapters:type_name -> sunnah.Chapter
	3,  // 3: sunnah.HadithsResponse.hadiths:type_name -> sunnah.Hadith
	4,  // 4: sunnah.Sunnah.Collections:input_type -> sunnah.CollectionsRequest
	6,  // 5: sunnah.Sunnah.Books:input_type -> sunnah.BooksRequest
	8,  // 6: sunnah.Sunnah.Chapters:input_type -> sunnah.ChaptersRequest
	10, // 7: sunnah.Sunnah.Hadiths:input_type -> sunnah.HadithsRequest
	5,  // 8: sunnah.Sunnah.Collections:output_type -> sunnah.CollectionsResponse
	7,  // 9: sunnah.Sunnah.Books:output_type -> sunnah.BooksResponse
	9,  // 10: sunnah.Sunnah.Chapters:output_type -> sunnah.ChaptersResponse
	11, // 11: sunnah.Sunnah.Hadiths:output_type -> sunnah.HadithsResponse
	8,  // [8:12] is the sub-list for method output_type
	4,  // [4:8] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_proto_sunnah_proto_init() }
func file_proto_sunnah_proto_init() {
	if File_proto_sunnah_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_sunnah_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sunnah_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Book); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sunnah_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chapter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sunnah_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hadith); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sunnah_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sunnah_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sunnah_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BooksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sunnah_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BooksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sunnah_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChaptersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sunnah_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChaptersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sunnah_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HadithsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sunnah_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HadithsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_sunnah_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_sunnah_proto_goTypes,
		DependencyIndexes: file_proto_sunnah_proto_depIdxs,
		MessageInfos:      file_proto_sunnah_proto_msgTypes,
	}.Build()
	File_proto_sunnah_proto = out.File
	file_proto_sunnah_proto_rawDesc = nil
	file_proto_sunnah_proto_goTypes = nil
	file_proto_sunnah_proto_depIdxs = nil
}
