// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: proto/quran.proto

package quran

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Chapter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the chapter as a number e.g 1
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The number of verses in the chapter
	Verses int32 `protobuf:"varint,2,opt,name=verses,proto3" json:"verses,omitempty"`
	// The simple name of the chapter
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// The arabic name of the chapter
	ArabicName string `protobuf:"bytes,4,opt,name=arabic_name,json=arabicName,proto3" json:"arabic_name,omitempty"`
	// The complex name of the chapter
	ComplexName string `protobuf:"bytes,5,opt,name=complex_name,json=complexName,proto3" json:"complex_name,omitempty"`
	// The translated name
	TranslatedName string `protobuf:"bytes,6,opt,name=translated_name,json=translatedName,proto3" json:"translated_name,omitempty"`
	// Should the chapter start with bismillah
	PrefixBismillah bool `protobuf:"varint,7,opt,name=prefix_bismillah,json=prefixBismillah,proto3" json:"prefix_bismillah,omitempty"`
	// The place of revelation
	RevelationPlace string `protobuf:"bytes,8,opt,name=revelation_place,json=revelationPlace,proto3" json:"revelation_place,omitempty"`
	// The order in which it was revealed
	RevelationOrder int32 `protobuf:"varint,9,opt,name=revelation_order,json=revelationOrder,proto3" json:"revelation_order,omitempty"`
	// The pages from and to e.g 1, 1
	Pages []int32 `protobuf:"varint,10,rep,packed,name=pages,proto3" json:"pages,omitempty"`
}

func (x *Chapter) Reset() {
	*x = Chapter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quran_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chapter) ProtoMessage() {}

func (x *Chapter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quran_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chapter.ProtoReflect.Descriptor instead.
func (*Chapter) Descriptor() ([]byte, []int) {
	return file_proto_quran_proto_rawDescGZIP(), []int{0}
}

func (x *Chapter) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Chapter) GetVerses() int32 {
	if x != nil {
		return x.Verses
	}
	return 0
}

func (x *Chapter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Chapter) GetArabicName() string {
	if x != nil {
		return x.ArabicName
	}
	return ""
}

func (x *Chapter) GetComplexName() string {
	if x != nil {
		return x.ComplexName
	}
	return ""
}

func (x *Chapter) GetTranslatedName() string {
	if x != nil {
		return x.TranslatedName
	}
	return ""
}

func (x *Chapter) GetPrefixBismillah() bool {
	if x != nil {
		return x.PrefixBismillah
	}
	return false
}

func (x *Chapter) GetRevelationPlace() string {
	if x != nil {
		return x.RevelationPlace
	}
	return ""
}

func (x *Chapter) GetRevelationOrder() int32 {
	if x != nil {
		return x.RevelationOrder
	}
	return 0
}

func (x *Chapter) GetPages() []int32 {
	if x != nil {
		return x.Pages
	}
	return nil
}

type Verse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique id of the verse in the whole book
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The verse number in this chapter
	Number int32 `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	// The key of this verse (chapter:verse) e.g 1:1
	Key string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	// The page of the Quran this verse is on
	Page int32 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	// The arabic text for this verse
	Text string `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// The phonetic transliteration from arabic
	Transliteration string `protobuf:"bytes,6,opt,name=transliteration,proto3" json:"transliteration,omitempty"`
	// The basic translation of the verse
	TranslatedText string `protobuf:"bytes,7,opt,name=translated_text,json=translatedText,proto3" json:"translated_text,omitempty"`
	// The alternative translations for the verse
	Translations []*Translation `protobuf:"bytes,8,rep,name=translations,proto3" json:"translations,omitempty"`
	// The interpretations of the verse
	Interpretations []*Interpretation `protobuf:"bytes,9,rep,name=interpretations,proto3" json:"interpretations,omitempty"`
	// The individual words within the verse (Ayah)
	Words []*Word `protobuf:"bytes,10,rep,name=words,proto3" json:"words,omitempty"`
}

func (x *Verse) Reset() {
	*x = Verse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quran_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Verse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Verse) ProtoMessage() {}

func (x *Verse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quran_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Verse.ProtoReflect.Descriptor instead.
func (*Verse) Descriptor() ([]byte, []int) {
	return file_proto_quran_proto_rawDescGZIP(), []int{1}
}

func (x *Verse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Verse) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Verse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Verse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Verse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Verse) GetTransliteration() string {
	if x != nil {
		return x.Transliteration
	}
	return ""
}

func (x *Verse) GetTranslatedText() string {
	if x != nil {
		return x.TranslatedText
	}
	return ""
}

func (x *Verse) GetTranslations() []*Translation {
	if x != nil {
		return x.Translations
	}
	return nil
}

func (x *Verse) GetInterpretations() []*Interpretation {
	if x != nil {
		return x.Interpretations
	}
	return nil
}

func (x *Verse) GetWords() []*Word {
	if x != nil {
		return x.Words
	}
	return nil
}

type Interpretation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique id of the interpretation
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The source of the interpretation
	Source string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	// The translated text
	Text string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Interpretation) Reset() {
	*x = Interpretation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quran_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interpretation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interpretation) ProtoMessage() {}

func (x *Interpretation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quran_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interpretation.ProtoReflect.Descriptor instead.
func (*Interpretation) Descriptor() ([]byte, []int) {
	return file_proto_quran_proto_rawDescGZIP(), []int{2}
}

func (x *Interpretation) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Interpretation) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Interpretation) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Translation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique id of the translation
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The source of the translation
	Source string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	// The translated text
	Text string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Translation) Reset() {
	*x = Translation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quran_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Translation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Translation) ProtoMessage() {}

func (x *Translation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quran_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Translation.ProtoReflect.Descriptor instead.
func (*Translation) Descriptor() ([]byte, []int) {
	return file_proto_quran_proto_rawDescGZIP(), []int{3}
}

func (x *Translation) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Translation) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Translation) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Word struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the word within the verse
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The position of the word
	Position int32 `protobuf:"varint,2,opt,name=position,proto3" json:"position,omitempty"`
	// The character type e.g word, end
	CharType string `protobuf:"bytes,3,opt,name=char_type,json=charType,proto3" json:"char_type,omitempty"`
	// The page number
	Page int32 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	// The line number
	Line int32 `protobuf:"varint,5,opt,name=line,proto3" json:"line,omitempty"`
	// The arabic text for this word
	Text string `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	// The QCF v2 font code
	Code string `protobuf:"bytes,7,opt,name=code,proto3" json:"code,omitempty"`
	// The translated text
	Translation string `protobuf:"bytes,8,opt,name=translation,proto3" json:"translation,omitempty"`
	// The transliteration text
	Transliteration string `protobuf:"bytes,9,opt,name=transliteration,proto3" json:"transliteration,omitempty"`
}

func (x *Word) Reset() {
	*x = Word{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quran_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Word) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Word) ProtoMessage() {}

func (x *Word) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quran_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Word.ProtoReflect.Descriptor instead.
func (*Word) Descriptor() ([]byte, []int) {
	return file_proto_quran_proto_rawDescGZIP(), []int{4}
}

func (x *Word) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Word) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *Word) GetCharType() string {
	if x != nil {
		return x.CharType
	}
	return ""
}

func (x *Word) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Word) GetLine() int32 {
	if x != nil {
		return x.Line
	}
	return 0
}

func (x *Word) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Word) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Word) GetTranslation() string {
	if x != nil {
		return x.Translation
	}
	return ""
}

func (x *Word) GetTransliteration() string {
	if x != nil {
		return x.Transliteration
	}
	return ""
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique verse id across the Quran
	VerseId int32 `protobuf:"varint,1,opt,name=verse_id,json=verseId,proto3" json:"verse_id,omitempty"`
	// The verse key e.g 1:1
	VerseKey string `protobuf:"bytes,2,opt,name=verse_key,json=verseKey,proto3" json:"verse_key,omitempty"`
	// The associated arabic text
	Text string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	// The related translations to the text
	Translations []*Translation `protobuf:"bytes,4,rep,name=translations,proto3" json:"translations,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quran_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quran_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_proto_quran_proto_rawDescGZIP(), []int{5}
}

func (x *Result) GetVerseId() int32 {
	if x != nil {
		return x.VerseId
	}
	return 0
}

func (x *Result) GetVerseKey() string {
	if x != nil {
		return x.VerseKey
	}
	return ""
}

func (x *Result) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Result) GetTranslations() []*Translation {
	if x != nil {
		return x.Translations
	}
	return nil
}

// List the Chapters (surahs) of the Quran
type ChaptersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specify the language e.g en
	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *ChaptersRequest) Reset() {
	*x = ChaptersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quran_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChaptersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChaptersRequest) ProtoMessage() {}

func (x *ChaptersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quran_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChaptersRequest.ProtoReflect.Descriptor instead.
func (*ChaptersRequest) Descriptor() ([]byte, []int) {
	return file_proto_quran_proto_rawDescGZIP(), []int{6}
}

func (x *ChaptersRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type ChaptersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chapters []*Chapter `protobuf:"bytes,1,rep,name=chapters,proto3" json:"chapters,omitempty"`
}

func (x *ChaptersResponse) Reset() {
	*x = ChaptersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quran_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChaptersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChaptersResponse) ProtoMessage() {}

func (x *ChaptersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quran_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChaptersResponse.ProtoReflect.Descriptor instead.
func (*ChaptersResponse) Descriptor() ([]byte, []int) {
	return file_proto_quran_proto_rawDescGZIP(), []int{7}
}

func (x *ChaptersResponse) GetChapters() []*Chapter {
	if x != nil {
		return x.Chapters
	}
	return nil
}

// Get a summary for a given chapter (surah)
type SummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The chapter id e.g 1
	Chapter int32 `protobuf:"varint,1,opt,name=chapter,proto3" json:"chapter,omitempty"`
	// Specify the language e.g en
	Language string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *SummaryRequest) Reset() {
	*x = SummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quran_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryRequest) ProtoMessage() {}

func (x *SummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quran_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummaryRequest.ProtoReflect.Descriptor instead.
func (*SummaryRequest) Descriptor() ([]byte, []int) {
	return file_proto_quran_proto_rawDescGZIP(), []int{8}
}

func (x *SummaryRequest) GetChapter() int32 {
	if x != nil {
		return x.Chapter
	}
	return 0
}

func (x *SummaryRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type SummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The chapter id
	Chapter int32 `protobuf:"varint,1,opt,name=chapter,proto3" json:"chapter,omitempty"`
	// The short summary for the chapter
	Summary string `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	// The source of the summary
	Source string `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	// The full description for the chapter
	Text string `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *SummaryResponse) Reset() {
	*x = SummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quran_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryResponse) ProtoMessage() {}

func (x *SummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quran_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummaryResponse.ProtoReflect.Descriptor instead.
func (*SummaryResponse) Descriptor() ([]byte, []int) {
	return file_proto_quran_proto_rawDescGZIP(), []int{9}
}

func (x *SummaryResponse) GetChapter() int32 {
	if x != nil {
		return x.Chapter
	}
	return 0
}

func (x *SummaryResponse) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *SummaryResponse) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *SummaryResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// Lookup the verses (ayahs) for a chapter
type VersesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The chapter id to retrieve
	Chapter int32 `protobuf:"varint,1,opt,name=chapter,proto3" json:"chapter,omitempty"`
	// The language of translation
	Language string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	// Return the individual words with the verses
	Words bool `protobuf:"varint,3,opt,name=words,proto3" json:"words,omitempty"`
	// Return the interpretation (tafsir)
	Interpret bool `protobuf:"varint,4,opt,name=interpret,proto3" json:"interpret,omitempty"`
	// Return alternate translations
	Translate bool `protobuf:"varint,5,opt,name=translate,proto3" json:"translate,omitempty"`
	// The page number to request
	Page int32 `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`
	// The verses per page
	Limit int32 `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *VersesRequest) Reset() {
	*x = VersesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quran_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersesRequest) ProtoMessage() {}

func (x *VersesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quran_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersesRequest.ProtoReflect.Descriptor instead.
func (*VersesRequest) Descriptor() ([]byte, []int) {
	return file_proto_quran_proto_rawDescGZIP(), []int{10}
}

func (x *VersesRequest) GetChapter() int32 {
	if x != nil {
		return x.Chapter
	}
	return 0
}

func (x *VersesRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *VersesRequest) GetWords() bool {
	if x != nil {
		return x.Words
	}
	return false
}

func (x *VersesRequest) GetInterpret() bool {
	if x != nil {
		return x.Interpret
	}
	return false
}

func (x *VersesRequest) GetTranslate() bool {
	if x != nil {
		return x.Translate
	}
	return false
}

func (x *VersesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *VersesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type VersesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The chapter requested
	Chapter int32 `protobuf:"varint,1,opt,name=chapter,proto3" json:"chapter,omitempty"`
	// The page requested
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// The total pages
	TotalPages int32 `protobuf:"varint,3,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	// The verses on the page
	Verses []*Verse `protobuf:"bytes,4,rep,name=verses,proto3" json:"verses,omitempty"`
}

func (x *VersesResponse) Reset() {
	*x = VersesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quran_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersesResponse) ProtoMessage() {}

func (x *VersesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quran_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersesResponse.ProtoReflect.Descriptor instead.
func (*VersesResponse) Descriptor() ([]byte, []int) {
	return file_proto_quran_proto_rawDescGZIP(), []int{11}
}

func (x *VersesResponse) GetChapter() int32 {
	if x != nil {
		return x.Chapter
	}
	return 0
}

func (x *VersesResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *VersesResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *VersesResponse) GetVerses() []*Verse {
	if x != nil {
		return x.Verses
	}
	return nil
}

// Search the Quran for any form of query or questions
type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The query to ask
	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// The language for translation
	Language string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	// The number of results to return
	Limit int32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// The pagination number
	Page int32 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quran_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quran_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_quran_proto_rawDescGZIP(), []int{12}
}

func (x *SearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SearchRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type SearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The question asked
	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// The total results returned
	TotalResults int32 `protobuf:"varint,2,opt,name=total_results,json=totalResults,proto3" json:"total_results,omitempty"`
	// The current page
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// The total pages
	TotalPages int32 `protobuf:"varint,4,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	// The results for the query
	Results []*Result `protobuf:"bytes,5,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quran_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quran_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_proto_quran_proto_rawDescGZIP(), []int{13}
}

func (x *SearchResponse) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchResponse) GetTotalResults() int32 {
	if x != nil {
		return x.TotalResults
	}
	return 0
}

func (x *SearchResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *SearchResponse) GetResults() []*Result {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_proto_quran_proto protoreflect.FileDescriptor

var file_proto_quran_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x71, 0x75, 0x72, 0x61, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x71, 0x75, 0x72, 0x61, 0x6e, 0x22, 0xc9, 0x02, 0x0a, 0x07, 0x43,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x72, 0x73, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x76, 0x65, 0x72, 0x73, 0x65, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x72, 0x61, 0x62, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x72, 0x61, 0x62, 0x69, 0x63, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x78, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x62, 0x69, 0x73, 0x6d, 0x69, 0x6c,
	0x6c, 0x61, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x42, 0x69, 0x73, 0x6d, 0x69, 0x6c, 0x6c, 0x61, 0x68, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65,
	0x76, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x76, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x76, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x72, 0x65, 0x76, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x22, 0xd8, 0x02, 0x0a, 0x05, 0x56, 0x65, 0x72, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x69, 0x74, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x36, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x71, 0x75,
	0x72, 0x61, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3f, 0x0a,
	0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x65, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x71, 0x75, 0x72, 0x61, 0x6e, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x65, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x65, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21,
	0x0a, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x71, 0x75, 0x72, 0x61, 0x6e, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x22, 0x4c, 0x0a, 0x0e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x65, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22,
	0x49, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xeb, 0x01, 0x0a, 0x04, 0x57,
	0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28,
	0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x69,
	0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8c, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x36, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x71, 0x75, 0x72, 0x61, 0x6e, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2d, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x3e, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x63, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x71,
	0x75, 0x72, 0x61, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x22, 0x46, 0x0a, 0x0e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x71,
	0x0a, 0x0f, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x22, 0xc1, 0x01, 0x0a, 0x0d, 0x56, 0x65, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x65, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x0e, 0x56, 0x65, 0x72, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x06, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x71, 0x75, 0x72, 0x61, 0x6e, 0x2e,
	0x56, 0x65, 0x72, 0x73, 0x65, 0x52, 0x06, 0x76, 0x65, 0x72, 0x73, 0x65, 0x73, 0x22, 0x6b, 0x0a,
	0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x0e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x27, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x71, 0x75, 0x72, 0x61, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x32, 0xf4, 0x01, 0x0a, 0x05, 0x51, 0x75, 0x72, 0x61, 0x6e,
	0x12, 0x3d, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x71,
	0x75, 0x72, 0x61, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x71, 0x75, 0x72, 0x61, 0x6e, 0x2e, 0x43, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x3a, 0x0a, 0x07, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x15, 0x2e, 0x71, 0x75, 0x72,
	0x61, 0x6e, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x71, 0x75, 0x72, 0x61, 0x6e, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x06, 0x56,
	0x65, 0x72, 0x73, 0x65, 0x73, 0x12, 0x14, 0x2e, 0x71, 0x75, 0x72, 0x61, 0x6e, 0x2e, 0x56, 0x65,
	0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x71, 0x75,
	0x72, 0x61, 0x6e, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x14,
	0x2e, 0x71, 0x75, 0x72, 0x61, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x71, 0x75, 0x72, 0x61, 0x6e, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0f, 0x5a,
	0x0d, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x71, 0x75, 0x72, 0x61, 0x6e, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_quran_proto_rawDescOnce sync.Once
	file_proto_quran_proto_rawDescData = file_proto_quran_proto_rawDesc
)

func file_proto_quran_proto_rawDescGZIP() []byte {
	file_proto_quran_proto_rawDescOnce.Do(func() {
		file_proto_quran_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_quran_proto_rawDescData)
	})
	return file_proto_quran_proto_rawDescData
}

var file_proto_quran_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_quran_proto_goTypes = []interface{}{
	(*Chapter)(nil),          // 0: quran.Chapter
	(*Verse)(nil),            // 1: quran.Verse
	(*Interpretation)(nil),   // 2: quran.Interpretation
	(*Translation)(nil),      // 3: quran.Translation
	(*Word)(nil),             // 4: quran.Word
	(*Result)(nil),           // 5: quran.Result
	(*ChaptersRequest)(nil),  // 6: quran.ChaptersRequest
	(*ChaptersResponse)(nil), // 7: quran.ChaptersResponse
	(*SummaryRequest)(nil),   // 8: quran.SummaryRequest
	(*SummaryResponse)(nil),  // 9: quran.SummaryResponse
	(*VersesRequest)(nil),    // 10: quran.VersesRequest
	(*VersesResponse)(nil),   // 11: quran.VersesResponse
	(*SearchRequest)(nil),    // 12: quran.SearchRequest
	(*SearchResponse)(nil),   // 13: quran.SearchResponse
}
var file_proto_quran_proto_depIdxs = []int32{
	3,  // 0: quran.Verse.translations:type_name -> quran.Translation
	2,  // 1: quran.Verse.interpretations:type_name -> quran.Interpretation
	4,  // 2: quran.Verse.words:type_name -> quran.Word
	3,  // 3: quran.Result.translations:type_name -> quran.Translation
	0,  // 4: quran.ChaptersResponse.chapters:type_name -> quran.Chapter
	1,  // 5: quran.VersesResponse.verses:type_name -> quran.Verse
	5,  // 6: quran.SearchResponse.results:type_name -> quran.Result
	6,  // 7: quran.Quran.Chapters:input_type -> quran.ChaptersRequest
	8,  // 8: quran.Quran.Summary:input_type -> quran.SummaryRequest
	10, // 9: quran.Quran.Verses:input_type -> quran.VersesRequest
	12, // 10: quran.Quran.Search:input_type -> quran.SearchRequest
	7,  // 11: quran.Quran.Chapters:output_type -> quran.ChaptersResponse
	9,  // 12: quran.Quran.Summary:output_type -> quran.SummaryResponse
	11, // 13: quran.Quran.Verses:output_type -> quran.VersesResponse
	13, // 14: quran.Quran.Search:output_type -> quran.SearchResponse
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_quran_proto_init() }
func file_proto_quran_proto_init() {
	if File_proto_quran_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_quran_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chapter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quran_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Verse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quran_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interpretation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quran_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Translation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quran_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Word); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quran_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quran_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChaptersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quran_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChaptersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quran_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quran_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quran_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quran_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quran_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quran_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_quran_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_quran_proto_goTypes,
		DependencyIndexes: file_proto_quran_proto_depIdxs,
		MessageInfos:      file_proto_quran_proto_msgTypes,
	}.Build()
	File_proto_quran_proto = out.File
	file_proto_quran_proto_rawDesc = nil
	file_proto_quran_proto_goTypes = nil
	file_proto_quran_proto_depIdxs = nil
}
