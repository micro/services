syntax = "proto3";

import "google/protobuf/struct.proto";

package search;

option go_package = "./proto;search";

service Search {
	rpc CreateIndex(CreateIndexRequest) returns (CreateIndexResponse) {}
	rpc Index(IndexRequest) returns (IndexResponse) {}
	rpc Delete(DeleteRequest) returns (DeleteResponse) {}
	rpc Search(SearchRequest) returns (SearchResponse) {}
	rpc DeleteIndex(DeleteIndexRequest) returns (DeleteIndexResponse) {}

}

// Index a document i.e. insert a document to search for
message IndexRequest {
	Document document = 2;
}

message Document {
	string id = 1;
	string index_name = 2;
	google.protobuf.Struct contents = 3;
}

message IndexResponse {

}

message DeleteRequest {
	string id = 1;
	string index_name = 2;
}

message DeleteResponse {}

// Search for documents in a given in index
message SearchRequest {
	string index_name = 1;
//	string keyword = 2;
	bool fuzzy = 4;
	QueryDef query = 5;
}

message QueryDef {
	repeated QueryDef queries = 1;
	repeated FieldQuery fields = 2;
	string operator = 3;
	bool prefix = 4;

}

message FieldQuery {
	string field_name = 1;
	string value = 2;
}

message SearchResponse {
	repeated Document documents = 1;

}

// Create a search index by specifying which fields are to be queried
message CreateIndexRequest {
	string index_name = 1;
	repeated Field fields = 2;
}

message Field {
	// The name of the field. Use a `.` separator to define nested fields e.g. foo.bar
	string name = 1;
	// The type of the field - string, number
	string type = 2;
}

message CreateIndexResponse {}

// Delete an index
message DeleteIndexRequest {
	string index_name = 1;
}

message DeleteIndexResponse {}
